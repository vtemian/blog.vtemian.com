<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on vtemian - blog</title><link>https://blog.vtemian.com/post/</link><description>Recent content in Posts on vtemian - blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 18 Oct 2024 15:32:57 +0200</lastBuildDate><atom:link href="https://blog.vtemian.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel Transaction Execution in Blockchains</title><link>https://blog.vtemian.com/post/parallel-transaction-execution-in-blockchains/</link><pubDate>Fri, 18 Oct 2024 15:32:57 +0200</pubDate><guid>https://blog.vtemian.com/post/parallel-transaction-execution-in-blockchains/</guid><description>&lt;p>In the last couple of years, we have seen the rise of &lt;a href="https://www.shoal.gg/p/parallel-execution-the-next-generation">infrastructure&lt;/a> projects in the blockchain space. One exciting development is &lt;a href="https://www.recvc.com/part-i-design-space-for-parallel-blockchains/">parallel blockchains&lt;/a>, specifically those that execute a batch of transactions in parallel.&lt;/p>
&lt;h2 id="concurrency-at-scale">Concurrency at Scale&lt;/h2>
&lt;p>When studying those chains, you can see some parallels to classical &lt;a href="https://en.wikipedia.org/wiki/Concurrency_control">concurrency patterns&lt;/a>, but those are hard to implement at scale.
Why is that? In addition to executing transactions in parallel (happening at the VM layer), we also need to consider replicating their output across the network.&lt;/p></description></item><item><title>Healthy Python Codebase</title><link>https://blog.vtemian.com/post/healthy-python-codebase/</link><pubDate>Mon, 21 Sep 2020 15:04:57 +0200</pubDate><guid>https://blog.vtemian.com/post/healthy-python-codebase/</guid><description>&lt;p>The code is a living entity. For the majority of the time, it stays in silence and it&amp;rsquo;s doing its job, without complaining.
But, there are these creatures, humanoid, that from time to time, will change it. Will try to fix it, adapt, or
completely remove parts of it. Those creatures tend to conserve energy and they are using pattern recognition to do so.
They observe patterns and take fast and easy decisions based on those patterns.
Because of that, this code entity needs to be structured and behave in certain patterns.&lt;/p></description></item><item><title>Building a serverless hosting platform</title><link>https://blog.vtemian.com/post/serverless-hosting-platform/</link><pubDate>Mon, 18 May 2020 13:06:21 +0200</pubDate><guid>https://blog.vtemian.com/post/serverless-hosting-platform/</guid><description>&lt;p>Deploying a 3-tier application (with the presentation layer, business logic, and storage) can get a little tricky these days. Let&amp;rsquo;s say that we have a simple Django application, &lt;a href="https://github.com/vtemian/simple-django-app">poll&amp;rsquo;s app&lt;/a> from the tutorial. It runs perfect on our local machine, we added a requirements.txt to hold our dependencies. As for the database, we can use SQLite, since we&amp;rsquo;re developing only locally. The purpose of this project is to build a system that will allow us to push on a branch and deploy our changes in a separate environment, giving us a unique URL, to check them. Similarly to how &lt;a href="http://now.sh">now.sh&lt;/a> and &lt;a href="http://heorku.com">heroku.com&lt;/a> are doing. We&amp;rsquo;ll need a mechanism that will package our code and dependencies and will deploy it, but also it needs to consider multiple versions, upgrades, load-balacing, scaling and our stateful part (database).&lt;/p></description></item><item><title>Python Multiple Inheritance</title><link>https://blog.vtemian.com/post/multiple-inheritance/</link><pubDate>Fri, 01 May 2020 14:03:00 +0200</pubDate><guid>https://blog.vtemian.com/post/multiple-inheritance/</guid><description>&lt;p>Inheritance, a simple and evil mechanism for re-using code, can get tricky. Traditionally, you may have encountered inheritance when you wanted to extend or override a class&amp;rsquo;s behavior.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Pet&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">walk&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;walk&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">eat&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;talk&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">talk&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;!@#$&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Dog&lt;/span>(Pet):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">talk&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Ham!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Cat&lt;/span>(Pet):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">talk&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Miau!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fairly easy to understand and follow. Dog and Cat share most of Pet&amp;rsquo;s behavior, with some &amp;ldquo;small&amp;rdquo; particularities.
Let&amp;rsquo;s say that we want to isolate particular behavior, for better testing purposes.&lt;/p></description></item><item><title>Interviews</title><link>https://blog.vtemian.com/post/interviews/</link><pubDate>Thu, 03 Jan 2019 22:02:12 +0200</pubDate><guid>https://blog.vtemian.com/post/interviews/</guid><description>&lt;p>I’m really nervous, only thinking of them. I had only one or two real interviews and conducted a few. Usually, I’m pretty lucky when it comes to job finding. The companies I like or want to work with contacted me, and it’s really flattering. No interview, just a small discussion, a beer and I’ll start next Monday.&lt;/p>
&lt;p>&lt;img src="https://images.unsplash.com/photo-1535515384173-d74166f26820?ixlib=rb-1.2.1&amp;amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;amp;auto=format&amp;amp;fit=crop&amp;amp;w=1350&amp;amp;q=80" alt="">&lt;/p>
&lt;p>For the past 2.5 years, I’ve started practicing. Practicing maybe it’s too much. I bought the books (like everybody does: &lt;a href="https://www.amazon.com/0984782850-983056789626-Cracking-Coding-Interview/dp/B07F16D3BG/ref=pd_lpo_sbs_14_t_1?_encoding=UTF8&amp;amp;psc=1&amp;amp;refRID=RD27GF1B4JP3R14XH98M">Cracking the Coding Interview&lt;/a>, &lt;a href="https://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202/ref=sr_1_2?ie=UTF8&amp;amp;qid=1546546500&amp;amp;sr=8-2&amp;amp;keywords=Algorithm+Design">The Algorithm Design Manual&lt;/a> and &lt;a href="https://www.amazon.com/Elements-Programming-Interviews-Questions-Tsung-Hsien/dp/B00C7F0V3W/ref=sr_1_6?ie=UTF8&amp;amp;qid=1546546537&amp;amp;sr=8-6&amp;amp;keywords=elements+of+Programming+Interviews">Elements of Programming Interviews&lt;/a>), paid a monthly subscription to leetcode.com, did some problems out there and that was it. I even told all my friends, and they all supported me. But each time I discovered a hard problem or did a mock interview that went bad, I would really feel ashamed and stopped trying. I would procrastinate and find other things to do (like finishing other work-related tasks or start a side-project in a new language etc.).
I wanted to feel safe and comfortable. I felt stupid that I didn’t know how to solve that problem, but I felt smart that I’ve could complete this extra task or did something pointless in a new programming language.&lt;/p></description></item><item><title>2019</title><link>https://blog.vtemian.com/post/2019/</link><pubDate>Wed, 02 Jan 2019 21:36:57 +0200</pubDate><guid>https://blog.vtemian.com/post/2019/</guid><description>&lt;p>So here I am, me, &lt;strong>naked&lt;/strong>, starting a blog.&lt;/p>
&lt;p>I must admit, I’m shy and I don’t have any &lt;strong>courage&lt;/strong>. I’ve always been this way. I lack the courage to make decisions, to commit, to trust myself. I’ve always wondered if people will accept me and I’ve tried my best to please and impress people.&lt;/p>
&lt;p>This led to a stagnation stage. I was too afraid of trying new things, learning, experimenting, trusting. I was, and I still am &lt;strong>afraid of failing&lt;/strong>. What my friends will think of me if I say something stupid? What will happen if I’ll say something wrong during a presentation? What if I’ll ask a foolish question, during a presentation? What will the interviewer think if I say or do something wrong? What my friends/parents will think of me if I fail this interview? Why did that driver honk me? Did I make something wrong? What&amp;hellip;if&amp;hellip;something&amp;hellip;stupid?&lt;/p></description></item></channel></rss>