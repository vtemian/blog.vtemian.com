<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on vtemian - blog</title><link>https://blog.vtemian.com/tags/kubernetes/</link><description>Recent content in Kubernetes on vtemian - blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 18 May 2020 13:06:21 +0200</lastBuildDate><atom:link href="https://blog.vtemian.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a serverless hosting platform</title><link>https://blog.vtemian.com/post/serverless-hosting-platform/</link><pubDate>Mon, 18 May 2020 13:06:21 +0200</pubDate><guid>https://blog.vtemian.com/post/serverless-hosting-platform/</guid><description>&lt;p>Deploying a 3-tier application (with the presentation layer, business logic, and storage) can get a little tricky these days. Let&amp;rsquo;s say that we have a simple Django application, &lt;a href="https://github.com/vtemian/simple-django-app">poll&amp;rsquo;s app&lt;/a> from the tutorial. It runs perfect on our local machine, we added a requirements.txt to hold our dependencies. As for the database, we can use SQLite, since we&amp;rsquo;re developing only locally. The purpose of this project is to build a system that will allow us to push on a branch and deploy our changes in a separate environment, giving us a unique URL, to check them. Similarly to how &lt;a href="http://now.sh">now.sh&lt;/a> and &lt;a href="http://heorku.com">heroku.com&lt;/a> are doing. We&amp;rsquo;ll need a mechanism that will package our code and dependencies and will deploy it, but also it needs to consider multiple versions, upgrades, load-balacing, scaling and our stateful part (database).&lt;/p></description></item></channel></rss>